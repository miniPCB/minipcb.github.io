New attempt at the same project.

I want to create a multi-file PyQt application for managing my website.

Let's talk about the functionality and files.

Functionality:
- View and navigate website folders and files (html, md, py, js, json, etc.)
- Remember last opened folder and file on restart
- Create new folders
- Create new files in currently selected folder
- Move files by drag and drop to different folders
- Delete selected file or folder
- Rename selected file or folder
- Edit selected file (with update HTML button to align with latest template)
- Save changes to file (with Ctrl+S)
- Auto-save feature every 30 seconds if changes detected
- View PDF datasheets in a PDF viewer tab
- Update all HTML files to latest template with one button
- Generate AI content for selected file using OpenAI API
- Easily edit nfooter across all HTML files
- Easily edit navigation bar on currently selected HTML file
- View currently selected HTML file on form tabs
    - Metadata tab
        - Basics sub-tab
            - PN
            - Title
            - Board Size
            - Pieces per Panel
            - Panel Size
        - SEO sub-tab
            - Slogan
            - Keywords
            - Description
        - Navigation sub-tab
            - List of links with text and URL
        - Revisions sub-tab
            - Table of revisions with date (YYYY-MM-DD), rev (A1-01), description (Initial Release), and By (N. Manteufel)
            - Add row above/below
            - Delete row
        - EAGLE Exports sub-tab
            - Netlist (markdown table loaded from ../md/PN-REV_sch.md)
            - Partlist (markdown table loaded from ../md/PN-REV_sch.md)
            - Pin Interface Description (markdown table loaded from ../md/PN-REV_sch.md)
    - Description tab
        - Button to edit AI Seeds
        - Maturity Level for description content (dropdown: Placeholder, Immature, Mature, Locked)
        - Large text area for detailed description of the board (generated by AI or manually edited)
    - Videos tab
        - List of video URLs (YouTube iframe embed)
    - Schematic tab
        - Display schematic image (from ../images/PN_schematic_01.png)
        - Display additional schematic images if they exist (PN_schematic_02.png, etc.)
    - Layout tab
        - Display layout image (from ../images/PN_components_top.png)
    - Downloads tab
        - List of download links with text and URL
    - Datasheets tab
        - Embed PDF viewer for datasheet (from ../datasheets/PN.pdf)
        - Scrollable
        - Zoomable
    - Additional Resources tab
        - List of video URLs (YouTube iframe embed)
    - FMEA tab
        - Table of FMEA items with columns: Item, Potential Failure Mode, Potential Effect of Failure, Severity (1-10), Potential Cause(s)/Mechanism(s) of Failure, Occurrence (1-10), Current Process Controls, Detection (1-10), RPN, Recommended Action(s), Responsibility, Target Completion Date, Actions Taken, Resulting Severity, Resulting Occurrence, Resulting Detection, New RPN
        - Add row above/below
        - Delete row
    - Testing tab
        - Table of testing items with columns: Test No., Test Name, Test Description, Lower Limit, Target Value, Upper Limit, Units
        - Add row above/below
        - Delete row
    

Files:
- main.py (main application file)
- file_manager.py (file and folder operations)
- file_editor.py (text editor with syntax highlighting)
- pdf_viewer.py (PDF viewing functionality)
- ai_integration.py (OpenAI API integration)
- html_template_updater.py (update HTML files to latest template)
- nfooter_editor.py (edit nfooter across all HTML files)
- navbar_editor.py (edit navigation bar on selected HTML file)
